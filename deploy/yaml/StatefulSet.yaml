apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nfs-server-provisioner
  namespace: nfs-server-provisioner
spec:
  replicas: 1
  serviceName: nfs-server-provisioner
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: statefulSet-nfs-server-provisioner-nfs-server-provisioner
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: statefulSet-nfs-server-provisioner-nfs-server-provisioner
    spec:
      containers:
        - env:
            - name: VIP
              value: 192.168.100.100
          image: phoenixmedia/external-nfs-server-provisioner:0.1.3
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - /provisioner/stop-cmd.sh
          livenessProbe:
            exec:
              command:
                - /provisioner/health-check.sh
            periodSeconds: 10
            timeoutSeconds: 25
            failureThreshold: 3
            successThreshold: 1
          name: nfs-server-provisioner
          startupProbe:
            exec:
              command:
                - stat
                - /provisioner/deployed.lock
            initialDelaySeconds: 3
            periodSeconds: 2
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 60
          resources: {}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities: {}
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          volumeMounts:
            - mountPath: /nfs-shared-storage
              name: nfs-storage
      dnsConfig: {}
      dnsPolicy: ClusterFirst
      hostNetwork: true
      hostPID: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: nfs-storage
          persistentVolumeClaim:
            claimName: nfs-storage
  updateStrategy:
    type: RollingUpdate
