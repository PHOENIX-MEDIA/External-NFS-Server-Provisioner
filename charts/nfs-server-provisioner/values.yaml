# Default values for nfs-server-provisioner.

image:
  repository: phoenixmedia/external-nfs-server-provisioner
  pullPolicy: IfNotPresent
  tag: "0.1.3"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

env:
  # Virtual IP address for the NFS server
  - name: VIP
    value: 192.168.10.100
  # for more values see https://github.com/PHOENIX-MEDIA/External-NFS-Server-Provisioner#environment-variables

podAnnotations: {}

additionalLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: true
  capabilities: {}
  privileged: true
  readOnlyRootFilesystem: false
  runAsNonRoot: false

lifecycle:
  preStop:
    exec:
      command:
        - /bin/sh
        - -c
        - /provisioner/stop-cmd.sh

livenessProbe:
  exec:
    command:
      - /provisioner/health-check.sh
  periodSeconds: 10
  timeoutSeconds: 25
  failureThreshold: 3
  successThreshold: 1

startupProbe:
  exec:
    command:
      - stat
      - /provisioner/deployed.lock
  initialDelaySeconds: 3
  periodSeconds: 2
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 60

terminationGracePeriodSeconds: 30

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Persistent Volume Claim for the NFS server
persistence:
  # name of the PVC
  name: nfs-storage
  # if set an existing PVC will be used instead
  existingClaim: ""
  accessModes:
    - ReadWriteOnce
  size: 10Gi
  # see storageClass.name
  storageClassName: "disk-redundant"
  dataSource: ""

  labels: {}
  annotations: {}

# StorageClass for the CSI driver
storageClass:
  # create storageClass for NFS driver
  enabled: true
  name: files
  # see csi-driver-nfs.driver.name
  provisioner: nfs.csi.k8s.io
  # see https://github.com/kubernetes-csi/csi-driver-nfs/blob/master/docs/driver-parameters.md
  parameters:
    server: 192.168.10.100
    share: /export
  reclaimPolicy: Delete
  volumeBindingMode: Immediate
  # client mount options
  mountOptions:
    - soft
    - intr
    - nodiratime
    - noatime
    - timeo=100
    - retrans=2

# CSI driver to create new PVC/PV on the NFS server
csi-driver-nfs:
  # Deploy optional CSI driver for NFS
  enabled: true

